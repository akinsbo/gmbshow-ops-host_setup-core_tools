---
# group_vars/all/vars.yml
app_name: mbshow
app_full_name: The maryboye show

# environment
my_env: prod

aws:
  credentials:
    profile: 
      name: "{{my_env}}" # e.g. default, Credentials
      override_with_current_cred: yes
    file_precedence:
      - "{{ lookup('env', 'HOME')}}/.aws/credentials"
      - "{{ lookup('env', 'HOME')}}/.boto"
      - "{{ lookup('env', 'HOME')}}/boto.cfg" # use profie name: Credentials (if using this as first choice)
  config:
    file: "{{ lookup('env', 'HOME')}}/.aws/config"

# glusterfs
glusterfs_version: 4.1
glusterfs:
  debian:
    apt_key: https://download.gluster.org/pub/gluster/glusterfs/{{glusterfs_version}}/rsa.pub
    repo_source: deb [arch=amd64] https://download.gluster.org/pub/gluster/glusterfs/{{glusterfs_version}}/LATEST/Debian/stretch/amd64/apt/ stretch main
  ubuntu:
    ppa: "ppa:gluster/glusterfs-{{glusterfs_version}}"

# kubectl
kubectl_version: "v1.10.3"
kubectl_download_path: "https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version }}/bin/linux/amd64/kubectl"
kubectl_darwin_download_path: "https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version }}/bin/darwin/amd64/kubectl"

# kops
kops_version: "1.9.1"
kops_download_path: "https://github.com/kubernetes/kops/releases/download/{{ kops_version }}/kops-linux-amd64"
kops_darwin_download_path: "https://github.com/kubernetes/kops/releases/download/{{ kops_version }}/kops-darwin-amd64"

helm_version: "2.9.1"
helm_download_path: https://storage.googleapis.com/kubernetes-helm/helm-v{{helm_version}}-linux-amd64.tar.gz
helm_darwin_download_path: https://storage.googleapis.com/kubernetes-helm/helm-v{{helm_version}}-darwin-amd64.tar.gz

# controller-user
remote_controller_root_user: olaolu
remote_controller_group: olaolu

# virtenv
controller_python_virtenv: "/usr/local/bin/{{app_name}}/python/venv"
controller_python3_virtenv: "/usr/local/bin/{{app_name}}/python3/venv"

common_os_environ_file: /etc/environment
download_location: "{{lookup('env', 'HOME')}}/Downloads"

local_ansible_user: olaolu
local_ansible_group: olaolu

log_path: "{{playbook_dir}}/log"

# Dynamic Inventory
ec2_py_path: "{{playbook_dir}}/inventory/ec2.py"

# ssh users
my_ssh_previous_user:
  name: kelly
  # key: "{{ (lookup'file', 'bob.pub') }}"
  uid: 000204
  comment: Name- Kelly Roland

my_ssh_user:
  name: loberson
  # key: "{{ (lookup'file', 'bob.pub') }}"
  uid: 000205
  comment: Name- Loberson Gilford

temp_pass: password_user_101

my_ssh_user_groups: 
  - admin
  - developer

ssh_known_hosts_file: "{{ lookup('env','HOME') + '/.ssh/known_hosts' }}"

############################
# Tags
############################
tag_creator: "{{iam.user.name}}"
tag_owner: "{{iam.user.name}}"
tag_application: "{{app_name}}"
tag_costcenter: 1234
tag_product: "{{app_name}}"
tag_confidentiality: StrictlyConfidential
tag_environment: Development

############################
# Route 53
############################
route53:
  zone:
    DNS: maryboye.org
    comment: The MaryBoye show

  record:
    subDNS: k8s
    type: A
    value: 127.0.0.1

  alias:
    record:
      type: A
      
# #################### 
# kops-setup vars
######################
kops_role: ClusterAdmin
kops_aws_managed_policies:
  - AmazonEC2FullAccess
  - AmazonRoute53FullAccess
  - AmazonS3FullAccess
  - IAMFullAccess
  - AmazonVPCFullAccess

ec2_key_name: "{{app_name}}_testi"
#  where to store ec2_keys on controller machine
ec2_keys_dir: "{{ lookup('env', 'HOME')}}/ec2_keys"
ec2_region: eu-west-1

cluster:
  ami: ami-58d7e821 #for ubuntu-xenial
  image_root_user: ubuntu #ubuntu #for ubuntu-xenial
  name: "{{route53.record.subDNS}}.{{route53.zone.DNS}}"
  ec2_node_type: t2.micro
  ec2_master_type: t2.micro
  bastion: true
  bastion_count: 3
  node_count: 3
  master_count: 3
  master_vol_size: 64 # in GB
  node_vol_size: 32 # in GB
  region: eu-west-1
  master_zones: "" # e.g. "{{region}}a,{{region}}b,{{region}}c"
  zones: "" # e.g. "{{region}}a,{{region}}b,{{region}}c"
  networking: calico
  topology: private
  output_location: "{{playbook_dir}}/roles/terraform/files"
  output_file_type: terraform #e.g. cloudformation
  # ssh keys
  ssh_public_key: "{{ec2_keys_dir}}/{{ ec2_region }}/{{ ec2_key_name }}.pub"
  ssh_private_key: "{{ec2_keys_dir}}/{{ ec2_region }}/{{ ec2_key_name }}.pem"
  
cluster_supplemental_group: "cluster_servers" # for hosts inventory file

cluster_accessories:
  spare_device1:
    device_fullname: "/dev/xvdb" # for multiple devices, use a comma separated list e.g. /dev/xvda,/dev/xvdb
    volume_size: 128
    volume_type: "gp2"
    delete_on_termination: true

# kubernetes kops generated-defaults
kops_sec_group_suffix: "{{cluster.name | regex_replace ('\\.','-')}}"
kops_group_tagname: "{{cluster.name | regex_replace ('\\.','_')}}"

bastion:
  user: "{{cluster.image_root_user}}"
  name: "bastion.{{cluster.name}}"
  # vars_location: "{{playbook_dir}}/group_vars/all/{{aws_module_inventory_insert_group}}.yml"
  inventory_group: "bastion"
  inventory_hostname: "bastions_{{kops_group_tagname}}" # name generated for bastion by ec2.py

master:
  user: "{{cluster.image_root_user}}"
  inventory_group: "master"

node:
  user: "{{cluster.image_root_user}}"
  inventory_group: "node"

iam:
  user:
    name: olaoluak
    groups: admin

inventory_to_use: "{{inventory_dir}}/hosts"
inventory_facts_path: "{{log_path}}/temp/facts"

log:
  public_inventory: "{{log_path}}/temp/inventory_list"

# #################### 
# s3_bucket 
######################
state_store: "s3://kops-state-store-{{app_name}}"
s3_bucket_tags:
  Name: "{{ state_store | replace('s3://', '') }}"
  Creator: "{{ tag_creator }}"
  Owner: "{{ tag_owner }}"
  Application: "{{ tag_application }}"
  CostCenter: "{{ tag_costcenter }}"
  Confidentiality: "{{ tag_confidentiality }}"
  Environment: "{{ tag_environment }}"

###################### 
# Terraform
######################
terraform_version: "0.11.7"
terraform_download_path: "https://releases.hashicorp.com/terraform/{{terraform_version}}/terraform_{{terraform_version}}_linux_amd64.zip"
terraform_darwin_download_path: "https://releases.hashicorp.com/terraform/{{terraform_version}}/terraform_{{terraform_version}}_darwin_amd64.zip"
terraform_log_path: "{{log_path}}/terraform.log"
terraform_aws_provider_version: "1.23"

# K8s
# add-ons
# Latest links can be found at https://kubernetes.io/docs/admin/cluster-large/
k8s_dashboard_url: https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml
influxdb_grafana_url: https://github.com/kubernetes/kubernetes/blob/master/cluster/addons/cluster-monitoring/influxdb/influxdb-grafana-controller.yaml
heapster_url: https://github.com/kubernetes/heapster/tree/master/deploy/kube-config/influxdb


# gluster
# gk-deploy_path: https://github.com/gluster/gluster-kubernetes/blob/master/deploy/gk-deploy

text:
  color:
    blue: "\e[34m"
    bluebg: "\e[44m"
    redbg: "\e[41m"