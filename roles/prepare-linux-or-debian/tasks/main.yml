---
# This playbook performs the following operations
# * Root signin
# * Create new user
# ** If Debian8, install sudo
# * Root privileges: Add user to sudo group
# * Add Public Key Authentication
# ** Generate key pair
# ** Copy the public key
# * Disable Password Authentication
# * Test Log in
# * Setup a Basic firewall

- name: Ensure virgin linux system is prepared
  block:
  - name: Ensure groups admin and developer are added
    become: yes
    group:
      name: "{{ item }}"
      state: present
    with_items:
      - admin
      - developer

  - name: Ensure sudo group exists if debian
    become: yes
    gather_facts: true
    apt:
      name: sudo
      update_cache: yes
      state: present
    when: ansible_os_family == 'Debian'

 
  - name: Debug ssh_users list
    debug:
      msg: "Here is a user: {{item.comment}}"
    with_items: "{{my_ssh_users}}"
    tags: 
      - debug
    
  - name: Ensure another user is created and added to sudo group
    become: yes
    user:
      name: "{{item.name}}"
      comment: "{{item.comment}}"
      uid: 000100
      groups: admin, developer, sudo
      create_home: yes
      generate_ssh_key: yes
      ssh_key_file: "{{ lookup('file', lookup('env','HOME') + '/.ssh/{{item.name}}.pub') }}"
      state: present
    with_items: "{{my_ssh_users}}"
    tags:
      - debug

  - name: Debug pub key location of ssh_users list
    debug:
      msg: "Here is where user pub is: {{ lookup('file', lookup('env','HOME') + '/.ssh/{{item.name}}.pub') }}"
    with_items: "{{my_ssh_users}}"
    tags: 
      - debug
    verbosity: 3

  # - name: Install UFW
  #   become: "{{remote_controller_user}}"
  #   package:
  #     name: ufw
  #     state: reset

  # - name: Ensure public key authentication is added
  #   become: yes
  #   - local_action:
 
  - name: Debug inventory_hostname
    debug:
      msg: ~/.ssh/{{inventory_hostname}}

  - name: Ensure new ssh key is generated
    command: ssh-keygen -t rsa -f ~/.ssh/inventory_hostname
    args: 
      creates:~/.ssh/{{inventory_hostname}}
    register: local_ssh_location

  - name: Set authorized key for new user copying from current user
    authorized_key:
      user: "{{remote_controller_user}}"
      state: present
      manage_dir: yes
      key: ~/.ssh/{{inventory_hostname}} 
