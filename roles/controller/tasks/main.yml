---
- name: Ensure Python 2.x is installed
  gather_facts: false
  become: true
  raw: test -e /usr/bin/python || (apt update && apt install -y python-simplejson)
  register: test
  changed_when: test.stdout
  tags:
    - upgrade

  # Uncomment for producution
# - name: Ensure system is upgraded
#   become: true
#   apt:
#     upgrade: safe
#     autoclean: yes
#     autoremove: yes
#   tags:
#     - upgrade

- name: Ensure ansible is setup
  block:
  # python3, pip3, pip
  # Ensure python3 and pip are installed

  - include: roles/common/tasks/install_pkg.yml
    gather_facts: true
    become: yes
    vars:
      module_pkgs:
        - python3
        - python3-pip
        - python3-venv
        - python-pip
    tags:
      - python

  - name: Get python version
    command: "{{ item }} --version"
    with_items:
      - python3
      - python2
    register: pyversion
    tags:
      - version

  - name: Debug python version
    debug:
      msg: "{{ item }}"
    with_items:
      # - "{{ pyversion.results[0].stdout}}"
      # - "{{ pyversion.results[1].stderr }}" #strangely, python2 prints version in stderr
      - "{{ pyversion.results[0].stdout}}"
      - "{{ pyversion.results[1].stderr }}"
    verbosity: 3
    tags:
      - version

  - name: Debug regex for python version report
    debug:
      msg: "{{item}}"
    with_items:
      - "{{ pyversion.results[0].stdout | regex_replace('Python\\s(\\d+)\\.(\\d+)\\.(\\d+)', 'python\\1\\2') }}"
      - "{{ pyversion.results[1].stderr | regex_replace('Python\\s(\\d+)\\.(\\d+)\\.(\\d+)', 'python\\1\\2') }}"
    verbosity: 3
    tags:
      - version

    # virtualenv
  - name: Install virtualenv via pip
    become: yes
    pip:
      name: virtualenv
    tags:
      - virtualenv

    # Also, you don't use sudo in a virtual environment
  - name: Ensure virtualenv is setup with ansible, boto and awscli installed therein
    pip:
      name: "{{item.package}}"
      virtualenv: "{{controller_python_virtenv}}"
      virtualenv_python: "/usr/bin/{{ item.python_bin_and_virtenv_to_Use }}"
    with_items:
      - { python_bin_and_virtenv_to_Use: python, package: ansible}
      - { python_bin_and_virtenv_to_Use: python, package: boto}
      - { python_bin_and_virtenv_to_Use: python, package: awscli}
    tags:
      - virtualenv
      - ansible
      - boto
      - awscli
  
    # No python3 virtenv for Debian8 because Debian8 installs python3.4 not 3.5
    # Also, you don't use sudo in a virtual environment
  - name: Ensure virtualenv is setup with ansible, boto3 and awscli installed in a python3 virtenv 
    pip:
      name: "{{item.package}}"
      virtualenv: "{{controller_python3_virtenv}}"
      virtualenv_python: "/usr/bin/{{ item.python_bin_and_virtenv_to_Use }}"
    with_items:
      - { python_bin_and_virtenv_to_Use: python3, package: boto3}    
      - { python_bin_and_virtenv_to_Use: python3, package: awscli}
      - { python_bin_and_virtenv_to_Use: python3, package: ansible}
    when: 
      - "{{  pyversion.results[0].stdout | regex_replace('Python\\s(\\d+)\\.(\\d+)\\.(\\d+)', '\\1.\\2') | float >= 3.5}}"
    tags:
      - virtualenv
      - ansible
      - boto3
      - awscli

  - include: roles/kops/tasks/install_kubectl_kops.yml
    tags:
      - kops
      - kubectl

  - include: roles/terraform/tasks/install.yml
    tags:
      - terraform