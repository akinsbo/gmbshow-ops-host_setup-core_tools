---
- name: Get key 
  shell: ssh-keyscan {{ inventory_module_insert_group_known_hosts }} 2>/dev/null
  register: myregistered_host_key

- name: Check if known_hosts file already contains the key
  shell: "grep '{{myregistered_host_key.stdout}}' {{ ssh_known_hosts_file }} > /dev/null"
  register: myregistered_duplicate_host_key
  Ignore_errors: yes
  when: not myregistered_host_key.stdout == ""

- debug:
    var: "{{myregistered_duplicate_host_key}}"
  
- name: For each host, scan for its ssh public key
  shell: "ssh-keyscan {{ inventory_module_insert_group_known_hosts }},`dig +short {{ inventory_module_insert_group_known_hosts }}`"
  register: myregistered_ssh_known_host_results
  ignore_errors: yes

- name: Add key if not present (i.e. would not be duplicated)
  block:
  - name: Add/update the public key in the '{{ ssh_known_hosts_file }}'
    known_hosts:
      name: "{{ myregistered_ssh_known_host_results.stdout}}.{{myregistered_ssh_known_host_results.stdout}}"
      key: "{{ myregistered_ssh_known_host_results.stdout }}"
      path: "{{ ssh_known_hosts_file }}"
      state: present
  rescue:
  - name: Remove the public key in the '{{ ssh_known_hosts_file }}'
    known_hosts:
      name: "{{ myregistered_ssh_known_host_results.stdout}}.{{myregistered_ssh_known_host_results.stdout}}"
      key: "{{ myregistered_ssh_known_host_results.stdout }}"
      path: "{{ ssh_known_hosts_file }}"
      state: absent
  - name: Try again to Add/update the public key in the '{{ ssh_known_hosts_file }}'
    known_hosts:
      name: "{{ myregistered_ssh_known_host_results.stdout}}.{{myregistered_ssh_known_host_results.stdout}}"
      key: "{{ myregistered_ssh_known_host_results.stdout }}"
      path: "{{ ssh_known_hosts_file }}"
      state: present
  when: myregistered_duplicate_host_key is not defined #or myregistered_duplicate_host_key|length < 1

###########################################
# vars:
#   inventory_module_insert_group_known_hosts: "{{item}}"