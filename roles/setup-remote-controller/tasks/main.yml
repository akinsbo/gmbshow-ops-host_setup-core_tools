---
- name: Ensure Python 2.x is installed
  gather_facts: false
  become: true
  raw: test -e /usr/bin/python || (apt update && apt install -y python-simplejson)
  register: test
  changed_when: test.stdout

# - name: Ensure system is upgraded
#   become: true
#   apt:
#     upgrade: safe

- name: Ensure ansible is setup
  block:
  - name: Ensure python3 and pip are installed
    gather_facts: true
    become: yes
    apt:
      update_cache: yes
      name: "{{ item }}"
      state: latest
      autoclean: yes
      autoremove: yes
    with_items:
      - python3
      - python3-pip
      - python3-venv
      - python-pip
    tags:
      - version

  - name: Ensure python version is obtained
    command: "{{ item }} --version"
    with_items:
      - python3
      - python2
    register: pyversion
    tags:
      - version
      - debug
      - regex

  - name: Debug pyversion
    debug:
      msg: "{{ item }}"
    with_items:
      # - "{{ pyversion.results[0].stdout}}"
      # - "{{ pyversion.results[1].stderr }}" #strangely, python2 prints version in stderr
      - "{{ pyversion.results[0].stdout}}"
      - "{{ pyversion.results[1].stderr }}"
    verbosity: 3
    tags:
      - version
      - debug

  - name: test regex
    debug:
      msg: "{{item}}"
    with_items:
      - "{{ pyversion.results[0].stdout | regex_replace('Python\\s(\\d+)\\.(\\d+)\\.(\\d+)', 'python\\1\\2') }}"
      - "{{ pyversion.results[1].stderr | regex_replace('Python\\s(\\d+)\\.(\\d+)\\.(\\d+)', 'python\\1\\2') }}"
    verbosity: 3
    tags:
      - regex

  - name: Install virtualenv via pip
    become: yes
    pip:
      name: virtualenv

  - name: Ensure virtualenv is setup with ansible, boto and awscli installed therein
    become: yes
    pip:
      name: "{{item.package}}"
      virtualenv: "{{controller_python_virtenv}}"
      virtualenv_python: "/usr/bin/{{ item.python_bin_and_virtenv_to_Use }}"
    with_items:
      - { python_bin_and_virtenv_to_Use: python, package: ansible}
      - { python_bin_and_virtenv_to_Use: python, package: boto}
      - { python_bin_and_virtenv_to_Use: python, package: awscli}
    tags:
      - version
  
        # No python3 virtenv for Debian8 because Debian8 installs python3.4 not 3.5
  - name: Ensure virtualenv is setup with ansible, boto3 and awscli installed in a python3 virtenv 
    become: yes
    pip:
      name: "{{item.package}}"
      virtualenv: "{{controller_python3_virtenv}}"
      virtualenv_python: "/usr/bin/{{ item.python_bin_and_virtenv_to_Use }}"
    with_items:
      - { python_bin_and_virtenv_to_Use: python3, package: ansible}
      - { python_bin_and_virtenv_to_Use: python3, package: boto3}
      - { python_bin_and_virtenv_to_Use: python3, package: awscli}
    when: 
      - "{{  pyversion.results[0].stdout | regex_replace('Python\\s(\\d+)\\.(\\d+)\\.(\\d+)', '\\1.\\2') | float >= 3.5}}"